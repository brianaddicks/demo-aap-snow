---
- name: Update all packages
  hosts: "{{ snow_configuration_item | default('webservers') }}"
  gather_facts: false

  tasks:
    - name: Get Facts
      ansible.builtin.setup:

    - name: Show plan
      ansible.builtin.debug:
        var: implementation_plan

    - name: Implmentation Plan defined
      when: implementation_plan is defined
      block:
        - name: Set package state
          ansible.builtin.set_fact:
            package_state: present

        - name: Update requested packages
          ansible.builtin.package:
            name: "{{ implementation_plan.installed | default('*') }}"
            state: "{{ package_state | default('latest') }}"
          become: true
          register: package_results

        - name: Set package output when length > 0
          when: package_results.results | length > 0
          ansible.builtin.set_fact:
            package_output: "{{ package_results.results | to_nice_yaml }}"

        - name: Set package output when length = 0
          when: package_results.results | length == 0
          ansible.builtin.set_fact:
            package_output: "No packages to update."

        - name: Set facts for next SNOW update
          ansible.builtin.set_fact:
            ctask_work_notes: |
              Patching results:

              {{ package_output }}
            ctask_update: true
            ctask_state: closed
            cacheable: true

    - name: Implmentation Plan is not defined
      when: implementation_plan is not defined
      block:
        - name: Get package information
          ansible.builtin.package:
            name: "*"
            state: "latest"
          become: true
          register: package_results

        - name: Set stats for subsequent Job Templates
          ansible.builtin.set_stats:
            data:
              snow_implementation_plan: "{{ lookup('template', '../templates/implementation_plan.j2') }}"
